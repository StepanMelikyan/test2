#7. В подключенном MySQL репозитории создать базу данных “Друзья человека”
CREATE DATABASE friends_of_human;

#8. Создать таблицы с иерархией из диаграммы в БД

CREATE TABLE animal_classes
(
	Id INT AUTO_INCREMENT PRIMARY KEY, 
	Class_name VARCHAR(30)
);

INSERT INTO animal_classes (Class_name)
VALUES ('Вьючные'),
('Домашние');  


CREATE TABLE packed_animals
(
	  Id INT AUTO_INCREMENT PRIMARY KEY,
    personal_name VARCHAR (30),
    Class_id INT,
    FOREIGN KEY (Class_id) REFERENCES animal_classes (Id) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO packed_animals (personal_name, Class_id)
VALUES ('Лошади', 1),
('Ослы', 1),  
('Верблюды', 1); 
    
CREATE TABLE home_animals
(
	  Id INT AUTO_INCREMENT PRIMARY KEY,
    personal_name VARCHAR (30),
    Class_id INT,
    FOREIGN KEY (Class_id) REFERENCES animal_classes (Id) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO home_animals (personal_name, Class_id)
VALUES ('Собаки', 2),
('Кошки', 2),  
('Хомяки', 2); 

CREATE TABLE cats 
(       
    Id INT AUTO_INCREMENT PRIMARY KEY, 
    Name VARCHAR(20), 
    Birthday DATE,
    Commands VARCHAR(50),
    personal_id int,
    Foreign KEY (personal_id) REFERENCES home_animals (Id) ON DELETE CASCADE ON UPDATE CASCADE
);

#9. Заполнить низкоуровневые таблицы именами(животных), командами которые они выполняют и датами рождения


INSERT INTO cats (Name, Birthday, Commands, personal_id)
VALUES ('Люся', '2013-04-01', 'кс-кс', 1),
('Мишка', '2014-01-06', "мяу", 1),  
('Тимое', '2012-01-05', "", 1); 

CREATE TABLE dogs 
(       
    Id INT AUTO_INCREMENT PRIMARY KEY, 
    Name VARCHAR(20), 
    Birthday DATE,
    Commands VARCHAR(50),
    personal_id int,
    Foreign KEY (personal_id) REFERENCES home_animals (Id) ON DELETE CASCADE ON UPDATE CASCADE
);
INSERT INTO dogs (Name, Birthday, Commands, personal_id)
VALUES ('Акила', '2020-01-01', 'место, голос, лапу', 2),
('Граф', '2021-06-12', "фас!, лапу", 2),  
('Шарик', '2018-05-01', "сидеть, фу", 2), 
('Босс', '2021-05-10', "лежать, фу, место", 2);

CREATE TABLE hamsters 
(       
    Id INT AUTO_INCREMENT PRIMARY KEY, 
    Name VARCHAR(20), 
    Birthday DATE,
    Commands VARCHAR(50),
    personal_id int,
    Foreign KEY (personal_id) REFERENCES home_animals (Id) ON DELETE CASCADE ON UPDATE CASCADE
);
INSERT INTO hamsters (Name, Birthday, Commands, personal_id)
VALUES ('Шум', '2020-10-12', '', 3),
('Гум', '2009-03-12', "беги", 3),  
('Гам', '2020-07-11', NULL, 3), 
('Гим', '2021-03-17', NULL, 3);

CREATE TABLE horses 
(       
    Id INT AUTO_INCREMENT PRIMARY KEY, 
    Name VARCHAR(20), 
    Birthday DATE,
    Commands VARCHAR(50),
    personal_id int,
    Foreign KEY (personal_id) REFERENCES packed_animals (Id) ON DELETE CASCADE ON UPDATE CASCADE
);
INSERT INTO horses (Name, Birthday, Commands, personal_id)
VALUES ('Ветер', '2020-01-12', 'беги, пррр', 1),
('Тор', '2017-03-12', "беги, иди, стой", 1),  
('Вихрь', '2016-07-12', "беги, стоп", 1), 
('Миша', '2020-11-10', "беги, лежи", 1);

CREATE TABLE donkeys 
(       
    Id INT AUTO_INCREMENT PRIMARY KEY, 
    Name VARCHAR(30), 
    Birthday DATE,
    Commands VARCHAR(30),
    personal_id int,
    Foreign KEY (personal_id) REFERENCES packed_animals (Id) ON DELETE CASCADE ON UPDATE CASCADE
);
INSERT INTO donkeys (Name, Birthday, Commands, personal_id)
VALUES ('Ослик', '2019-04-10', "", 2),
('Ослак', '2020-03-12', "", 2),  
('Ослук', '2021-07-12', NULL, 2), 
('Ослек', '2022-12-10', NULL, 2);

CREATE TABLE camels 
(       
    Id INT AUTO_INCREMENT PRIMARY KEY, 
    Name VARCHAR(20), 
    Birthday DATE,
    Commands VARCHAR(50),
    personal_id int,
    Foreign KEY (personal_id) REFERENCES packed_animals (Id) ON DELETE CASCADE ON UPDATE CASCADE
);
INSERT INTO camels (Name, Birthday, Commands, personal_id)
VALUES ('Гриф', '2022-04-10', 'беги', 3),
('Граф', '2019-03-12', "остановись", 3),  
('Грин', '2011-07-12', "кричи", 3), 
('Грон', '2023-01-02', "плюй", 3);

#10. Удалив из таблицы верблюдов, т.к. верблюдов решили перевезти в другой
#питомник на зимовку. Объединить таблицы лошади, и ослы в одну таблицу.

SET SQL_SAFE_UPDATES = 0;
DELETE FROM camels;

SELECT Name, Birthday, Commands FROM horses
UNION SELECT  Name, Birthday, Commands FROM donkeys;

#11.Создать новую таблицу “молодые животные” в которую попадут все
#животные старше 1 года, но младше 3 лет и в отдельном столбце с точностью
#до месяца подсчитать возраст животных в новой таблице

CREATE TEMPORARY TABLE animals AS 
SELECT *, 'Лошади' as genus FROM horses
UNION SELECT *, 'Ослы' AS genus FROM donkeys
UNION SELECT *, 'Собаки' AS genus FROM dogs
UNION SELECT *, 'Кошки' AS genus FROM cats
UNION SELECT *, 'Хомяки' AS genus FROM hamsters;

CREATE TABLE new_animal AS
SELECT Name, Birthday, Commands, genus, TIMESTAMPDIFF(MONTH, Birthday, CURDATE()) AS Age_in_month
FROM animals WHERE Birthday BETWEEN ADDDATE(curdate(), INTERVAL -3 YEAR) AND ADDDATE(CURDATE(), INTERVAL -1 YEAR);
 
SELECT * FROM new_animal;

#12. Объединить все таблицы в одну, при этом сохраняя поля, указывающие на
#прошлую принадлежность к старым таблицам.

SELECT h.Name, h.Birthday, h.Commands, pa.personal_name, ya.Age_in_month 
FROM horses h
LEFT JOIN new_animal ya ON ya.Name = h.Name
LEFT JOIN packed_animals pa ON pa.Id = h.personal_id
UNION 
SELECT d.Name, d.Birthday, d.Commands, pa.personal_name, ya.Age_in_month 
FROM donkeys d 
LEFT JOIN new_animal ya ON ya.Name = d.Name
LEFT JOIN packed_animals pa ON pa.Id = d.personal_id
UNION
SELECT c.Name, c.Birthday, c.Commands, ha.personal_name, ya.Age_in_month 
FROM cats c
LEFT JOIN new_animal ya ON ya.Name = c.Name
LEFT JOIN home_animals ha ON ha.Id = c.personal_id
UNION
SELECT d.Name, d.Birthday, d.Commands, ha.personal_name, ya.Age_in_month 
FROM dogs d
LEFT JOIN new_animal ya ON ya.Name = d.Name
LEFT JOIN home_animals ha ON ha.Id = d.personal_id
UNION
SELECT hm.Name, hm.Birthday, hm.Commands, ha.personal_name, ya.Age_in_month 
FROM hamsters hm
LEFT JOIN new_animal ya ON ya.Name = hm.Name
LEFT JOIN home_animals ha ON ha.Id = hm.personal_id;
